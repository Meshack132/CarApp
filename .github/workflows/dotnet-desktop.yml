name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    timeout-minutes: 30  # Timeout setting for the job

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: CarApp.sln
      Wap_Project_Directory: CarApp.Wap
      Wap_Project_Path: CarApp.Wap/CarApp.Wap.wapproj

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        include-prerelease: true

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: List WAP Directory
      run: |
        echo "Listing contents of WAP Project Directory"
        Get-ChildItem -Path ${{ env.Wap_Project_Directory }} -Recurse

    - name: Restore the application
      run: |
        echo "Restoring solution..."
        msbuild ${{ env.Solution_Name }} /t:Restore /p:Configuration=${{ matrix.configuration }} || exit 1
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Decode the pfx
      run: |
        New-Item -Path $env:Wap_Project_Directory -ItemType Directory -Force
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $certificatePath = Join-Path -Path $env:Wap_Project_Directory -ChildPath GitHubActionsWorkflow.pfx
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    - name: Create the app package
      run: |
        echo "Building the app package..."
        msbuild ${{ env.Wap_Project_Path }} /p:Configuration=${{ matrix.configuration }} /p:UapAppxPackageBuildMode=StoreUpload /p:AppxBundle=Always /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx /p:PackageCertificatePassword=${{ secrets.Pfx_Key }} || exit 1
      env:
        Appx_Bundle: Always
        Appx_Bundle_Platforms: x86|x64
        Appx_Package_Build_Mode: StoreUpload
        Configuration: ${{ matrix.configuration }}

    - name: Remove the pfx
      run: Remove-Item -path $env:Wap_Project_Directory\GitHubActionsWorkflow.pfx

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: MSIX Package
        path: ${{ env.Wap_Project_Directory }}\AppPackages
